################################# KEY BINDINGS #################################
# Note: that the -n means we can ignore the ctrl-a prefix

# Set Ctrl-b as the default prefix
unbind C-b
unbind C-e
set-option -g prefix C-t

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix
bind-key -r c new-window -c "#{pane_current_path}"

# Reload the tmux file
bind r source-file "$tmux_dir/tmux.conf"    # Displays "Tmux reloaded!"

# Copy mode
bind o copy-mode

# Windows
bind w kill-window
bind-key n previous-window
bind-key e next-window

# Move Windows
bind -n S-Left swap-window -t -1\; select-window -t -1
bind -n S-Right swap-window -t +1\; select-window -t +1

#Resize panes
bind -n M-Left resize-pane -L 10
bind -n M-Right resize-pane -R 10
bind -n M-Up resize-pane -U 5
bind -n M-Down resize-pane -D 5

# Split panes
bind s split-window -v  -c "#{pane_current_path}"             # Horizontal
bind v split-window -h  -c "#{pane_current_path}"             # Vertical
bind k kill-pane -a                  # Kill all panes except for the current one

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?)(diff)?$'"

bind-key -n 'C-Left' if-shell "$is_vim" 'send-keys C-Left'  'select-pane -L'
bind-key -n 'C-Down' if-shell "$is_vim" 'send-keys C-Down'  'select-pane -D'
bind-key -n 'C-Up' if-shell "$is_vim" 'send-keys C-Up'  'select-pane -U'
bind-key -n 'C-Right' if-shell "$is_vim" 'send-keys C-Right'  'select-pane -R'

bind-key -T copy-mode-vi 'C-Left' select-pane -L
bind-key -T copy-mode-vi 'C-Down' select-pane -D
bind-key -T copy-mode-vi 'C-Up' select-pane -U
bind-key -T copy-mode-vi 'C-Right' select-pane -R

unbind -T copy-mode-vi h;
unbind -T copy-mode-vi j;
unbind -T copy-mode-vi k;
unbind -T copy-mode-vi l;

bind -T copy-mode-vi h send-keys -X cursor-left;
bind -T copy-mode-vi n send-keys -X cursor-down;
bind -T copy-mode-vi e send-keys -X cursor-up;
bind -T copy-mode-vi i send-keys -X cursor-right;

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"

bind P paste-buffer
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -selection clipboard -i"
